{"ast":null,"code":"var _jsxFileName = \"/Users/rezaaditya/Documents/github/my-mui-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider, useTheme, createTheme } from '@mui/material/styles';\nimport { amber, deepOrange, grey, blueGrey } from '@mui/material/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getDesignTokens = mode => ({\n  palette: {\n    mode,\n    primary: {\n      ...blueGrey,\n      ...(mode === 'dark' && {\n        main: blueGrey[300]\n      })\n    },\n    ...(mode === 'dark' && {\n      background: {\n        default: blueGrey[900],\n        paper: blueGrey[900]\n      }\n    }),\n    text: {\n      ...(mode === 'light' ? {\n        primary: grey[900],\n        secondary: grey[800]\n      } : {\n        primary: '#fff',\n        secondary: grey[500]\n      })\n    }\n  }\n});\nconst darkModeTheme = createTheme(getDesignTokens('dark'));\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(ThemeProvider, {\n  theme: darkModeTheme,\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 44,\n  columnNumber: 3\n}, this));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","serviceWorkerRegistration","reportWebVitals","BrowserRouter","ThemeProvider","useTheme","createTheme","amber","deepOrange","grey","blueGrey","getDesignTokens","mode","palette","primary","main","background","default","paper","text","secondary","darkModeTheme","root","createRoot","document","getElementById","render","register"],"sources":["/Users/rezaaditya/Documents/github/my-mui-app/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { ThemeProvider, useTheme, createTheme } from '@mui/material/styles';\nimport { amber, deepOrange, grey, blueGrey } from '@mui/material/colors';\n\nconst getDesignTokens = (mode) => ({\n  palette: {\n    mode,\n    primary: {\n      ...blueGrey,\n      ...(mode === 'dark' && {\n        main: blueGrey[300],\n      }),\n    },\n    ...(mode === 'dark' && {\n      background: {\n        default: blueGrey[900],\n        paper: blueGrey[900],\n      },\n    }),\n    text: {\n      ...(mode === 'light'\n        ? {\n            primary: grey[900],\n            secondary: grey[800],\n          }\n        : {\n            primary: '#fff',\n            secondary: grey[500],\n          }),\n    },\n  },\n});\nconst darkModeTheme = createTheme(getDesignTokens('dark'));\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <ThemeProvider theme={darkModeTheme}>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </ThemeProvider>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,KAAKC,yBAAyB,MAAM,6BAA6B;AACxE,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,aAAa,QAAQ,kBAAkB;AAEhD,SAASC,aAAa,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,sBAAsB;AAC3E,SAASC,KAAK,EAAEC,UAAU,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,sBAAsB;AAAC;AAEzE,MAAMC,eAAe,GAAIC,IAAI,KAAM;EACjCC,OAAO,EAAE;IACPD,IAAI;IACJE,OAAO,EAAE;MACP,GAAGJ,QAAQ;MACX,IAAIE,IAAI,KAAK,MAAM,IAAI;QACrBG,IAAI,EAAEL,QAAQ,CAAC,GAAG;MACpB,CAAC;IACH,CAAC;IACD,IAAIE,IAAI,KAAK,MAAM,IAAI;MACrBI,UAAU,EAAE;QACVC,OAAO,EAAEP,QAAQ,CAAC,GAAG,CAAC;QACtBQ,KAAK,EAAER,QAAQ,CAAC,GAAG;MACrB;IACF,CAAC,CAAC;IACFS,IAAI,EAAE;MACJ,IAAIP,IAAI,KAAK,OAAO,GAChB;QACEE,OAAO,EAAEL,IAAI,CAAC,GAAG,CAAC;QAClBW,SAAS,EAAEX,IAAI,CAAC,GAAG;MACrB,CAAC,GACD;QACEK,OAAO,EAAE,MAAM;QACfM,SAAS,EAAEX,IAAI,CAAC,GAAG;MACrB,CAAC;IACP;EACF;AACF,CAAC,CAAC;AACF,MAAMY,aAAa,GAAGf,WAAW,CAACK,eAAe,CAAC,MAAM,CAAC,CAAC;AAE1D,MAAMW,IAAI,GAAGvB,QAAQ,CAACwB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACT,QAAC,aAAa;EAAC,KAAK,EAAEL,aAAc;EAAA,uBACpC,QAAC,aAAa;IAAA,uBACZ,QAAC,GAAG;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA;AACO;EAAA;EAAA;EAAA;AAAA,QACA,CACjB;;AAED;AACA;AACA;AACApB,yBAAyB,CAAC0B,QAAQ,EAAE;;AAEpC;AACA;AACA;AACAzB,eAAe,EAAE"},"metadata":{},"sourceType":"module"}